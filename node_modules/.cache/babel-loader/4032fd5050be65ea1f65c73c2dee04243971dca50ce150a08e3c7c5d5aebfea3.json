{"ast":null,"code":"var _jsxFileName = \"/Users/jaikanthkamisetti/Documents/Trae/SRM AP/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth, googleProvider, db } from '../firebase';\nimport { signInWithPopup, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userProfile, setUserProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const signInWithGoogle = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      const user = result.user;\n\n      // Check if user profile exists in Firestore\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      if (!userDoc.exists()) {\n        // Create new user profile\n        const newUserProfile = {\n          uid: user.uid,\n          email: user.email,\n          displayName: user.displayName,\n          photoURL: user.photoURL,\n          role: '',\n          // Will be set during onboarding\n          createdAt: new Date().toISOString()\n        };\n        await setDoc(doc(db, 'users', user.uid), newUserProfile);\n        setUserProfile(newUserProfile);\n      } else {\n        setUserProfile(userDoc.data());\n      }\n      return result;\n    } catch (error) {\n      console.error('Error signing in with Google:', error);\n      throw error;\n    }\n  };\n  const updateUserRole = async role => {\n    if (currentUser) {\n      const updatedProfile = {\n        ...userProfile,\n        role\n      };\n      await setDoc(doc(db, 'users', currentUser.uid), updatedProfile, {\n        merge: true\n      });\n      setUserProfile(updatedProfile);\n    }\n  };\n  const logout = () => {\n    return signOut(auth);\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        setCurrentUser(user);\n        // Fetch user profile from Firestore\n        const userDoc = await getDoc(doc(db, 'users', user.uid));\n        if (userDoc.exists()) {\n          setUserProfile(userDoc.data());\n        }\n      } else {\n        setCurrentUser(null);\n        setUserProfile(null);\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    userProfile,\n    signInWithGoogle,\n    updateUserRole,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"bTkDkafiPCgjmH9o6GheLT4aXjI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","googleProvider","db","signInWithPopup","signOut","onAuthStateChanged","doc","setDoc","getDoc","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","userProfile","setUserProfile","loading","setLoading","signInWithGoogle","result","user","userDoc","uid","exists","newUserProfile","email","displayName","photoURL","role","createdAt","Date","toISOString","data","error","console","updateUserRole","updatedProfile","merge","logout","unsubscribe","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaikanthkamisetti/Documents/Trae/SRM AP/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth, googleProvider, db } from '../firebase';\nimport { signInWithPopup, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userProfile, setUserProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const signInWithGoogle = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      const user = result.user;\n      \n      // Check if user profile exists in Firestore\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      \n      if (!userDoc.exists()) {\n        // Create new user profile\n        const newUserProfile = {\n          uid: user.uid,\n          email: user.email,\n          displayName: user.displayName,\n          photoURL: user.photoURL,\n          role: '', // Will be set during onboarding\n          createdAt: new Date().toISOString()\n        };\n        \n        await setDoc(doc(db, 'users', user.uid), newUserProfile);\n        setUserProfile(newUserProfile);\n      } else {\n        setUserProfile(userDoc.data());\n      }\n      \n      return result;\n    } catch (error) {\n      console.error('Error signing in with Google:', error);\n      throw error;\n    }\n  };\n\n  const updateUserRole = async (role) => {\n    if (currentUser) {\n      const updatedProfile = { ...userProfile, role };\n      await setDoc(doc(db, 'users', currentUser.uid), updatedProfile, { merge: true });\n      setUserProfile(updatedProfile);\n    }\n  };\n\n  const logout = () => {\n    return signOut(auth);\n  };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        setCurrentUser(user);\n        // Fetch user profile from Firestore\n        const userDoc = await getDoc(doc(db, 'users', user.uid));\n        if (userDoc.exists()) {\n          setUserProfile(userDoc.data());\n        }\n      } else {\n        setCurrentUser(null);\n        setUserProfile(null);\n      }\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    userProfile,\n    signInWithGoogle,\n    updateUserRole,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}